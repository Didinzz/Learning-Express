<% layout('layouts/app') %>
  <h1>All Places</h1>
  <div id="mapContainer" style="width: 100%; height: 400px; "></div>
  <a href="/places/create">
    <button class="btn btn-primary">Add New Place</button>
  </a>
  <div class="d-flex flex-wrap">
    <% for(const place of places) {%>
      <div class="card my-3 mx-2" style="width: 18rem">
        <% if(place.images.length){ %>
          <img src="/image/<%= place.images[0].filename %>" class="img-fluid" alt="">
          <% }else{ %>
            <img src="https://picsum.photos/1280/720?nature" class="img-fluid" alt="">
            <% } %>
              <div class="card-body d-flex flex-column">
                <h5 class="card-title">
                  <%= place.title %>
                </h5>
                <span>Rp. <%= place.price %></span>
                <span>üìç<%= place.location %></span>
                <p class="card-text">
                  <%= place.description %>
                </p>
                <a href="/places/<%= place._id %>" class="btn btn-primary mt-auto w-100">Detail</a>
              </div>
      </div>
      <% } %>
  </div>

  <div id="place-data" data-place="<%= clusteredPlace %>"></div>

  <script>
    const clusteredPlace = JSON.parse(document.getElementById('place-data').dataset.place);
  </script>

  <script>
    function startClustering(map, data) {
        // First we need to create an array of DataPoint objects,
        // for the ClusterProvider
        var dataPoints = data.map(function (item) {
          return new H.clustering.DataPoint(item.latitude, item.longitude);
        });

        // Create a clustering provider with custom options for clusterizing the input
        var clusteredDataProvider = new H.clustering.Provider(dataPoints, {
          clusteringOptions: {
            // Maximum radius of the neighbourhood
            eps: 32,
            // minimum weight of points required to form a cluster
            minWeight: 2
          }
        });

        // Create a layer tha will consume objects from our clustering provider
        var clusteringLayer = new H.map.layer.ObjectLayer(clusteredDataProvider);

        // To make objects from clustering provder visible,
        // we need to add our layer to the map
        map.addLayer(clusteringLayer);
      }

    
      const platform = new H.service.Platform({
        'apikey': 'zqU7trO5aYKamgXsqm5sQkrNiEnUku6XlRYrbfkXBek'
      });

      const defaultLayers = platform.createDefaultLayers();

      const map = new H.Map(
        document.getElementById('mapContainer'),
        defaultLayers.vector.normal.map,
        {
          zoom: 5,
          center: {lat:  -0.49545 ,lng: 117.14375 }
        });




      const ui = H.ui.UI.createDefault(map, defaultLayers, 'en-US');
      const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));

      startClustering(map, clusteredPlace)
  </script>